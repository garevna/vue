{
	"Vue.js": [
		{
			"head":"el",
			"picture":false,
			"code":[
				"new Vue  ( {",
				"  el: '…',",
				"  data : { … },",
				"  methods : { … },",
				"  computed : { … },",
				"  watch: {},",
				"})"
			],
			"text":"Экземпляр Vue является моделью.<br/>Модель необходимо связать с представлением, т.е. с элементом DOM.<br/>Для связывания модели с представлением (элементом DOM) служит свойство el экземпляра Vue",
			"textURL":"",
			"ref":false,
			"samples":[],
			"usefull":[
				"https://vuejs.org/v2/guide/instance.html"
			]
		},
		{
			"head":"$mount",
			"picture":false,
			"code":[
				"const app = new Vue( {",
				"   ...",
				"}).$mount('#app')"
			],
			"text":"При отсутствии свойства el экземпляра Vue связать модель с представлением можно с помощью метода $mount",
			"textURL":"",
			"ref":false,
			"samples":[],
			"usefull":[]
		},
		{
			"head":"data | computed",
			"code":[
				"data : {",
				"  priceUSD: 10,",
				"  course: 25.4",
				"},",
				"computed: {",
				"  priceUA: function () {",
				"    return this.priceUSD * this.course",
				"  }",
				"}"
			],
			"text":"Объекты data и computed являются встроенными свойствами экземпляра Vue.<br/>Эти объекты содержат реактивные свойства модели, т.е. свойства, при изменении которых происходит автоматическое изменение представления",
			"textURL":"",
			"ref":[
				"https://codepen.io/garevna/pen/QqEMoa",
				"https://codepen.io/garevna/pen/dZVqqZ"
			],
			"samples":[
				"https://codepen.io/garevna/pen/QqEMoa",
				"https://codepen.io/garevna/pen/dZVqqZ"
			],
			"usefull":[
				"https://alligator.io/vuejs/property-validation/"
			]
		},
		{
			"head":"computed",
			"picture":"",
			"code":[
				"data : {",
				"  userId: 'Иван',",
				"  message: 'зайди в бухгалтерию'",
				"},",
				"computed: {",
				"  announcement: function () {",
				"    return this.userId + ', ' + this.message",
				"  }",
				"}"
			],
			"text":"Вычисляемое свойство announcement будет пересчитано  только тогда, когда изменится одна из его зависимостей - userId или message.",
			"textURL":"",
			"ref":[ "https://codepen.io/garevna/pen/veqNzL" ],
			"samples":[
				"https://codepen.io/garevna/pen/veqNzL"
			],
			"usefull":[
				"https://alligator.io/vuejs/computed-properties"
			]
		},
		{
			"head":"$emit",
			"picture":false,
			"code":false,
			"text":"Метод, позволяющий эмитировать событие ( подробнее см. раздел Events )",
			"textURL":"",
			"ref":[ "https://plnkr.co/edit/vdEIxZYvoN4x6VFMX3kb?p=preview" ],
			"samples":[
				"https://plnkr.co/edit/vdEIxZYvoN4x6VFMX3kb?p=preview"
			],
			"usefull":[]
		},
		{
			"head":"CSS",
			"picture":"https://vuetifyjs.com/static/doc-images/logo.svg",
			"code":false,
			"text":"Material Component Framework",
			"textURL":"",
			"readme":"",
			"samples":[],
			"usefull":[
				"https://vuetifyjs.com/"
			]
		},
		{
			"head":"vue-devtools",
			"picture":false,
			"code":false,
			"text":"Расширение Chrome для vue-разработчика",
			"textURL":"",
			"readme":"https://garevna.github.io/vue.github.io/data/vue/devtools.html",
			"ref":[
				"https://plnkr.co/edit/vdEIxZYvoN4x6VFMX3kb?p=preview"
			],
			"samples":[
				"https://plnkr.co/edit/vdEIxZYvoN4x6VFMX3kb?p=preview"
			],
			"usefull":[
				"https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd"
			]
		},
		{
			"head":"filters",
			"picture":false,
			"code":[
				"// Глобальный фильтр",
				"Vue.filter ( 'toUA', function ( value ) {",
				"     return `${value} грн`",
				"})",
				"new Vue({",
				"     el: '#sample',",
				"     data: {",
				"         name: 'windows'",
				"     }",
				"     // Локальный фильтр",
				"     filters: {",
				"         bigLetters ( value ) {",
				"     }",
				"})",
				"// index.html:",
				"<div id='sample'>",
				"     <p>{{ price | toUA }}</p>",
				"     <p>{{ 'windows' | bigLetters }}</p>",
				"</div>"
			],
			"text":"Собственные фильты можно зарегистрировать глобально и локально<br/>Объявление фильтра нужно делать до создания экземпляра Vue<br/>Фильтры - это обычные функции, поэтому им можно передавать параметры",
			"textURL":"",
			"readme":false,
			"ref":[
				"https://plnkr.co/edit/Adqs21lTs6snJXnRpHZu?p=preview"
			],
			"samples":[
				"https://plnkr.co/edit/Adqs21lTs6snJXnRpHZu?p=preview"
			],
			"usefull":[
				"https://ru.vuejs.org/v2/guide/filters.html",
				"https://css-tricks.com/using-filters-vue-js/",
				"https://alligator.io/vuejs/using-filters/",
				"https://scotch.io/tutorials/how-to-create-filters-in-vuejs-with-examples"
			]
		},
		{
			"head":"life cycle",
			"picture":false,
			"code":[],
			"text":"Хуки жизненного цикла",
			"textURL":"",
			"readme":false,
			"samples":[
			],
			"usefull":[
				"https://ru.vuejs.org/v2/guide/instance.html",
				"https://alligator.io/vuejs/component-lifecycle/",
				"https://scotch.io/tutorials/demystifying-vue-lifecycle-methods",
				"https://codingexplained.com/coding/front-end/vue-js/using-vue-instance-lifecycle-hooks",
				"https://metanit.com/web/vuejs/1.13.php"
			]
		}
	],
	"Directives": [
		{
			"head":"v-bind",
			"picture":"https://upload.wikimedia.org/wikipedia/commons/9/93/Protein_MBL2_PDB_1hup.png",
			"code":[
				"// imageSrc - свойство родителя",
				"<img v-bind:src = 'imageSrc'/>",
				"// сокращенная запись:",
				"<img :src = 'imageSrc'/>"
			],
			"text":"Динамически связывает атрибуты тега или входной параметр компонента с выражением",
			"textURL":"",
			"ref":[
				"https://codepen.io/garevna/pen/eGRawR",
				"https://codepen.io/garevna/pen/VMzYdP"
			],
			"samples":[
				"https://codepen.io/garevna/pen/eGRawR",
				"https://codepen.io/garevna/pen/VMzYdP"
			],
			"usefull":[]
		},
		{
			"head":"v-model",
			"picture":"https://www.mycanceriq.ca/Content/images/HelpfulLinks_Banner.png",
			"code":[],
			"text":"Служит для двустороннего связывания потомка и родителя.<br/>Соответствующее свойство, указанное в директиве, может быть изменено в потомке, что будет реактивно отражено в родителе.<br/>Обычно используется для элементов форм",
			"textURL":"",
			"ref":[
				"https://codepen.io/garevna/pen/aLypvq",
				"https://codepen.io/garevna/pen/oGKzOB",
				"https://codepen.io/garevna/pen/xXvRyP",
				"https://codepen.io/garevna/pen/PJMbrr",
				"https://codepen.io/garevna/pen/WZVRKj",
				"https://codepen.io/garevna/pen/RLQNjm"
			],
			"samples":[
				"https://codepen.io/garevna/pen/aLypvq",
				"https://codepen.io/garevna/pen/oGKzOB",
				"https://codepen.io/garevna/pen/xXvRyP",
				"https://codepen.io/garevna/pen/PJMbrr",
				"https://codepen.io/garevna/pen/WZVRKj",
				"https://codepen.io/garevna/pen/RLQNjm"
			],
			"usefull":[]
		},
		{
			"head":"v-for",
			"picture":"https://media.giphy.com/media/PGbycv8RLT5Ze/giphy.gif",
			"code":[
				"<div v-for='item in items'>",
				"  {{ item.name }}",
				"  {{ item.price }}",
				"</div>"
			],
			"text":"Служит для создания группы элементов на основе массива входных данных.<br/>Данные массива могут быть как примитивами, так и объектами или массивами",
			"textURL":"",
			"ref":[	"https://codepen.io/garevna/pen/EwXGPB" ],
			"samples":[
				"https://codepen.io/garevna/pen/EwXGPB"
			],
			"usefull":[
				"https://metanit.com/web/vuejs/2.3.php"
			]
		},
		{
			"head":"v-show",
			"picture":"https://cdn.pixabay.com/photo/2012/04/24/13/08/smiley-39984_960_720.png",
			"code":[],
			"text":"Директива, позволяющая управлять отображением элементов в представлении на основании значений переменных модели",
			"textURL":"",
			"ref":[ "https://codepen.io/garevna/pen/OxjRJW" ],
			"samples":[
				"https://codepen.io/garevna/pen/OxjRJW"
			],
			"usefull":[
				"https://metanit.com/web/vuejs/2.2.php"
			]
		},
		{
			"head":"v-if",
			"picture":"https://cdnsc.azureedge.net/resources/logo.min-sha2UrlX-5wEsrrV0qRDj5z4xoWgLBo.png",
			"code":[
				"<p v-if='expr'>{{ message }}</p>",
				"<p v-else> {{ error }}</p>"
			],
			"text":"Условный рендеринг.<br/>В отличие от директивы v-show, добавляет или удаляет элемент DOM в зависимости от значения условного выражения expr.<br/>Директива v-else обеспечивает рендеринг альтернативного варианта, если условное выражение expr принимает значение false",
			"textURL":"",
			"ref":[
				"https://codepen.io/garevna/pen/EwvgKJ",
				"https://codepen.io/garevna/pen/NavRdX"
			],
			"samples":[
				"https://codepen.io/garevna/pen/EwvgKJ",
				"https://codepen.io/garevna/pen/NavRdX"
			],
			"usefull":[
				"https://metanit.com/web/vuejs/2.1.php"
			]
		},
		{
			"head":"v-on",
			"picture":false,
			"code":[
				"<button v-on:click = 'clickHandler'>",
				"  Кликни!",
				"</button>",
				"// краткая форма:",
				"<button @click = 'clickHandler'>",
				"    Кликни!",
				"</button>"
			],
			"text":"Прикрепляет к элементу прослушиватель событий.<br/>Тип события является аргументом директивы.",
			"textURL":"",
			"ref":[
				"https://codepen.io/garevna/pen/PJjgPm",
				"https://codepen.io/garevna/pen/veJZOb",
				"https://codepen.io/garevna/pen/YrVpmm"
			],
			"samples":[
				"https://codepen.io/garevna/pen/PJjgPm",
				"https://codepen.io/garevna/pen/veJZOb",
				"https://codepen.io/garevna/pen/YrVpmm"
			],
			"usefull":[
				"https://v1.vuejs.org/guide/events.html",
				"https://alligator.io/vuejs/events/"
			]
		},
		{
			"head":"v-cloak",
			"picture":false,
			"code":[
				"<div v-cloak>",
				"  {{ message }}",
				"</div>"
			],
			"text":"Элемент не будет показан до окончания компиляции.<br/>Эта директива позволяет избежать отображения 'усатого' ( {{...}} ) синтаксиса клиенту",
			"textURL":"",
			"ref":false,
			"samples":[
			],
			"usefull":[]
		}
	],
	"Components": [
		{
			"head":"Radio button",
			"picture":false,
			"code":[],
			"text":"Простой компонент с литеральным шаблоном.<br/>Использование директив v-for, v-bind, v-model при вызове компонента.<br/>Передача данных из компонента родителю с помощью встроенного метода $emit",
			"textURL":"",
			"ref":[ "https://codepen.io/garevna/pen/pWdLoz" ],
			"samples":[
				"https://codepen.io/garevna/pen/pWdLoz"
			],
			"usefull":[]
		},
		{
			"head":"Checkboxes",
			"picture":false,
			"code":[],
			"text":"Многократно используемый компонент, определенный в глобальной области видимости, с динамически обновляемым контентом",
			"textURL":"",
			"ref":[ "https://plnkr.co/edit/77n86nKgvcllq2nRKLGb?p=preview" ],
			"samples":[
				"https://plnkr.co/edit/77n86nKgvcllq2nRKLGb?p=preview"
			],
			"usefull":[]
		},
		{
			"head":"dropdown menu",
			"picture":false,
			"code":[],
			"text":"Пример компонента dropdown-menu, в котором при выборе одного из элементов меню происходит отправка события родителю (экземпляру Vue) с передачей внутреннего содержимого выбранного пункта меню.<br/>В экземпляре Vue происходит обработка события и вывод соотвествующего текста на страницу",
			"textURL":"",
			"ref":[ "https://plnkr.co/edit/qKB8ACBVu7jZvqnBscn6?p=preview" ],
			"samples":[
				"https://plnkr.co/edit/qKB8ACBVu7jZvqnBscn6?p=preview"
			],
			"usefull":[]
		},
		{
			"head":"Dynamic component",
			"picture":false,
			"code":[],
			"readme":"https://garevna.github.io/vue.github.io/data/components/dynamic.html",
			"text":"Пример компонента dropdown-menu, в котором при выборе одного из элементов меню происходит отправка события родителю (экземпляру Vue) с передачей внутреннего содержимого выбранного пункта меню.<br/>В экземпляре Vue происходит обработка события и вывод соотвествующего текста на страницу",
			"textURL":"",
			"ref":[ "https://plnkr.co/edit/RXcN5V5T7iW51b30XMm0?p=preview" ],
			"samples":[
				"https://plnkr.co/edit/RXcN5V5T7iW51b30XMm0?p=preview"
			],
			"usefull":[]
		},
		{
			"head":"Recursive component",
			"picture":false,
			"code":[],
			"readme":false,
			"text":"Пример рекурсивного компонента",
			"textURL":"",
			"ref":[ "https://plnkr.co/edit/mFmaocEKAzJVOwIK6Wwu?p=preview" ],
			"samples":[
				"https://plnkr.co/edit/mFmaocEKAzJVOwIK6Wwu?p=preview"
			],
			"usefull":[
				"https://medium.com/js-dojo/build-a-collapsible-tree-menu-with-vue-js-recursive-components-e598306dc3d1"
			]
		},
		{
			"head":"props & data",
			"picture":false,
			"code":[],
			"readme":"https://garevna.github.io/vue.github.io/data/components/array.html",
			"text":"Особенности работы с массивами",
			"textURL":"",
			"ref":[ "http://plnkr.co/edit/t4UbB25dtNCpNAAxIZJR?p=preview" ],
			"samples":[
				"http://plnkr.co/edit/t4UbB25dtNCpNAAxIZJR?p=preview"
			],
			"usefull":[
				"https://css-tricks.com/intro-to-vue-2-components-props-slots/"
			]
		},
		{
			"head":"lifecycle",
			"picture":false,
			"code":[],
			"readme":"",
			"text":"Хуки жизненного цикла компонента",
			"textURL":"",
			"samples":[
			],
			"usefull":[
				"https://scotch.io/tutorials/demystifying-vue-lifecycle-methods"
			]
		}
	],
	"Events":[
		{
			"head":"Отцы и дети",
			"picture":"http://www.playcast.ru/uploads/2016/09/12/19876831.gif",
			"code":[],
			"text":"Передача события из вложенных компонентов",
			"textURL":"",
			"ref":["https://plnkr.co/edit/h5dcxsniStLikyXAloSc?p=preview"],
			"samples":[
				"https://plnkr.co/edit/h5dcxsniStLikyXAloSc?p=preview"
			],
			"usefull":[]
		},
		{
			"head":"Шина событий",
			"picture":"http://kino-filmi.net/uploads/posts/2014-07/1406219565_karlson4.jpg",
			"code":[],
			"readme":"https://garevna.github.io/vue.github.io/data/events/event_bus.html",
			"text":"Передача событий через общую шину",
			"textURL":"https://garevna.github.io/vue.github.io/data/events/globalEventBus.html",
			"ref":["https://plnkr.co/edit/XRznjj6FTBbyuwiVHSeC?p=preview"],
			"samples":[
				"https://plnkr.co/edit/XRznjj6FTBbyuwiVHSeC?p=preview"
			],
			"usefull":[
				"https://alligator.io/vuejs/global-event-bus/",
				"https://devblog.digimondo.io/building-a-simple-eventbus-in-vue-js-64b70fb90834",
				"http://vuetips.com/global-event-bus"
			]
		},
		{
			"head":"Шина данных",
			"picture":"http://nizhnevartovsk.altronshina.ru/image/cache/hamburger-altron-465x500.png",
			"code":[],
			"readme":"https://garevna.github.io/vue.github.io/data/events/data_bus.html",
			"text":"Использование общего хранилища данных, загружаемых асинхронно с помощью метода $http.get плагина vue-resource",
			"textURL":"",
			"ref":["https://plnkr.co/edit/asuwUwM2UGKpWshgS4lG?p=preview"],
			"samples":[
				"https://plnkr.co/edit/asuwUwM2UGKpWshgS4lG?p=preview"
			],
			"usefull":[
				"https://devblog.digimondo.io/building-a-simple-eventbus-in-vue-js-64b70fb90834",
				"http://vuetips.com/global-event-bus",
				"https://vuejs.org/v2/guide/components.html#Non-Parent-Child-Communication"
			]
		}
	],
	"Templates":[
		{
			"head":"String",
			"picture":false,
			"code":[
				"Vue.component('comp', {",
				"   template:",
				"     `<div class='comp'></div>`",
				"})"
			],
			"text":"Шаблон компонента в виде текстовой строки имеет единственное достоинство - широкую поддержку браузеров",
			"textURL":"",
			"ref":false,
			"samples":[],
			"usefull":[]
		},
		{
			"head":"literal",
			"picture":false,
			"code":[
				"Vue.component('comp', {",
				"  template:",
				"    `<div class='comp'",
				"        @click='check'>",
				"     </div>`,",
				"  methods: {",
				"    check () {",
				"      this.show = !this.show;",
				"    }",
				"  }",
				"})"
			],
			"text":"Литералы шаблонов ES6 («backticks») позволяют определять шаблон на нескольких строках, чего нельзя сделать в обычной строке Javascript. Такие шаблоны намного легче читать, и сейчас они поддерживаются во многих новых браузерах.",
			"textURL":"",
			"ref":false,
			"samples":[],
			"usefull":[]
		},
		{
			"head":"Тег <template>",
			"picture":false,
			"code":[
				"<template id='my-template'>",
				"  <button class='btn' @click='callback'>",
				"  <div class='title'></div>",
				"</template>"
			],
			"text":"Шаблон можно описать в теге <template> с атрибутом id, значение которого потом использовать для подключения шаблона к компоненту",
			"textURL":"",
			"ref":[ "https://codepen.io/garevna/pen/yzvxQb" ],
			"samples":[ "https://codepen.io/garevna/pen/yzvxQb" ],
			"usefull":[]
		},
		{
			"head":"X-template",
			"picture":false,
			"code":[
				"<script type='text/x-template'",
				"        id='my-template'>",
				"   <div class='wrapper'",
				"        @click='callback'>",
				"     <div class='title'></div>",
				"   </div>",
				"</script>"
			],
			"text":"С помощью этого метода шаблон определяется внутри тега скрипта в файле index.html.<br/>Тэг скрипта маркируется как text/x-template и имеет идентификатор, на который будет ссылка в определении компонента:<br/><code>Vue.component('sample', { template: '#my-template' })</code><br/>Этот метод позволяет писать валидный код HTML, но при этом шаблон отделен от определения компонента.",
			"textURL":"",
			"ref":[ "https://codepen.io/garevna/pen/MEQyZL" ],
			"samples":[ "https://codepen.io/garevna/pen/MEQyZL" ],
			"usefull":[]
		},
		{
			"head":"inline",
			"picture":false,
			"code":[
				"<sample-component inline-template>",
				"  <div class='wrapper'",
				"       @click='check'>",
				"     <div class='title'></div>",
				"  </div>",
				"</sample-component>"
			],
			"text":"Атрибут inline-template в теге компонента указывает Vue, что внутренний контент является шаблоном, а не распределенным контентом (слоты).<br/>Преимущество этого метода заключается в том, что контент находится в правильном месте в HTML-шаблоне и поэтому может отображаться при загрузке страницы, а не в ожидании запуска Javascript.",
			"textURL":"",
			"ref":[ "https://codepen.io/garevna/pen/dVdORP" ],
			"samples":[ "https://codepen.io/garevna/pen/dVdORP" ],
			"usefull":[]
		},
		{
			"head":"render function",
			"picture": false,
			"code":[
				"// В index.html:",
				"// <main id='sample'></main>",
				"// Создаем экземпляр Vue:",
				"new Vue ({",
				"    el: '#sample',",
				"    data: {",
				"        message: 'Добрый день'",
				"    }",
				"//    Создаем виртуальный узел DOM",
				"    render ( createElement ) {",
				"      'h1',",
				"      { attrs: { id: 'hello' } }",
				"      this.message",
				"    )",
				"  }",
				"})",
				"// В представлении будет такой результат:",
				"//    <main id='sample'>",
				"//        <h1 id='hello'>Добрый день</h1>",
				"//    </main>"
			],
			"text":"С помощью функции-фибрики мы создаем виртуальный узел DOM.<br/>Работа с виртуальным DOM увеличивает скорость работы приложения и обеспечивает большую гибкость.<br/>При создании динамических компонентов с переменными входными параметрами функции рендеринга зачастую оказываются более удобны, чем другие способы задания шаблона компонента.<br/>Часто это связано с использованием слотов.<br/>Фактически во время сборки все шаблоны Vue.js компилируются в функции рендеринга.<br/>Шаблоны просто обеспечивают удобный и более привычный синтаксический сахар поверх функций рендеринга.<br/><hr/>Компоненты с функциями рендеринга не имеют тега или свойства template.<br/>Вместо этого внутри компонента объявляется функция render, которой передается в качестве аргумента метод <em>createElement</em> (принятый псевдоним <b>h</b>), и которая возвращает элемент, созданный с помощью этой функции.<br/><hr/>В шаблонах Vue можно использовать директивы для добавления базовой логики и привязки данных.<br/>Функции Render не имеют к ним доступа, поскольку они должны быть реализованы на Javascript, однако для большинства директив подобная реализация будет несложной",
			"textURL":"",
			"ref":[
				"https://plnkr.co/edit/ORRVJLhVVUyE2OJIoX9R?p=preview",
				"https://plnkr.co/edit/H0GhWgLKuiw1zaFGQLZ1?p=preview"
			],
			"samples":[
				"https://plnkr.co/edit/ORRVJLhVVUyE2OJIoX9R?p=preview",
				"https://plnkr.co/edit/H0GhWgLKuiw1zaFGQLZ1?p=preview"
			],
			"usefull":[]
		},
		{
			"head":"JSX",
			"picture":false,
			"code":[],
			"text":"JSX является самым спорным вариантом шаблона во Vue.<br/>Некоторые разработчики рассматривают JSX как нечто уродливое, противоречащее главной концепции Vue.<br/>JSX требует предварительной компиляции, так как он не читается браузерами.",
			"textURL":"",
			"ref":false,
			"samples":[
			],
			"usefull":[]
		},
		{
			"head":"SFC",
			"picture":false,
			"code":[
				"<style scoped>",
				"  .example {",
				"    color: red;",
				"  }",
				"</style>",
				"<template>",
				"  <div class='example'>hi</div>",
				"</template>"
			],
			"text":"При условии использованя инструментов сборки Single File Components является наилучшим вариантом создания шаблона компонента.<br/>Этот способ вобрал в себя лучшее из всех остальных способов: он позволяет писать валидную разметку, сохраняя при этом все части компонента в одном файле с раширением vue.<br/>Если тег &lt;style> имеет атрибут scoped, его CSS будет применяться только к элементам текущего компонента.<br/>Это похоже на инкапсуляцию стиля в Shadow DOM.<br/><hr/>Этот способ требует транспиляции, и некоторые IDE не поддерживают подсветку синтаксиса vue-файлов.",
			"textURL":"",
			"ref":["https://codesandbox.io/s/o29j95wx9"],
			"samples":[
			],
			"usefull":[]
		}
	],
	"Slots": [
		{
			"head":"Слоты",
			"picture":false,
			"code":[],
			"text":"Простые (не именованные) слоты",
			"textURL":"",
			"ref":[
				"https://codepen.io/garevna/pen/QqmbrO",
				"https://plnkr.co/edit/fjZol88VeRAOgn9OSe45?p=preview",
				"https://plnkr.co/edit/x7XCNVDkGfm6JPvhVikz?p=preview"
			],
			"samples":[
				"https://codepen.io/garevna/pen/QqmbrO",
				"https://plnkr.co/edit/fjZol88VeRAOgn9OSe45?p=preview",
				"https://plnkr.co/edit/x7XCNVDkGfm6JPvhVikz?p=preview"
			],
			"usefull":[]
		},
		{
			"head":"named slots",
			"picture":false,
			"code":[],
			"text":"Именованные слоты",
			"textURL":"",
			"readme":"https://garevna.github.io/vue.github.io/data/slots/02.html",
			"ref":[
				"https://plnkr.co/edit/hSVkDkhgfB6kgCMQjKNd?p=preview",
				"https://plnkr.co/edit/9nFUtNDqeZ1JX003oDHO?p=preview"
			],
			"samples":[
				"https://plnkr.co/edit/hSVkDkhgfB6kgCMQjKNd?p=preview",
				"https://plnkr.co/edit/9nFUtNDqeZ1JX003oDHO?p=preview"
			],
			"usefull":[]
		},
		{
			"head":"scoped slots",
			"picture":false,
			"code":[
				"// === в template потомка: ===",
				"<slot :text='Предку от потомка'></slot>",
				"<slot name='sample' :text='Мой дневник'></slot>",
				"// === в родителе: ===",
				"<child-component>",
				"    <p slot-scope='defaultSlotScope'>",
				"        {{ defaultSlotScope.text }}",
				"    </p>",
				"    <p slot='sample' slot-scope='sampleSlotScope'>",
				"        {{ sampleSlotScope.text }}",
				"    </p>",
				"</child-component>"
			],
			"readme":"https://garevna.github.io/vue.github.io/data/slots/03.html",
			"text":"Слоты с контекстом (областью видимости).<br/>Читайте README в примерах",
			"textURL":"",
			"ref":[
				"https://plnkr.co/edit/JTcf6yBVOlgsT9agmpN2?p=preview",
				"https://plnkr.co/edit/ie2WRPSUnwD9oavte4of?p=preview",
				"https://plnkr.co/edit/H0GhWgLKuiw1zaFGQLZ1?p=preview",
				"https://plnkr.co/edit/7gKCXrakfSf5EDFBokN5?p=preview"
			],
			"samples":[
				"https://plnkr.co/edit/JTcf6yBVOlgsT9agmpN2?p=preview",
				"https://plnkr.co/edit/ie2WRPSUnwD9oavte4of?p=preview",
				"https://plnkr.co/edit/H0GhWgLKuiw1zaFGQLZ1?p=preview",
				"https://plnkr.co/edit/7gKCXrakfSf5EDFBokN5?p=preview"
			],
			"usefull":[
				"https://medium.com/js-dojo/getting-your-head-around-vue-js-scoped-slots-281bf82a1e4e"
			]
		}
	],
	"Transitions":[
		{
			"head":"Анимация",
			"picture":false,
			"code":[
				"<transition name='sliding'>",
				"    <div class='animated'",
				"         v-if='visibleElem'>",
				"    </div>",
				"</transition>"
			],
			"text":"Использование встроенных компонентов transition и transition-group с классами -enter | -leave для анимации появления / исчезновения элементов DOM",
			"textURL":"",
			"ref":[
				"https://plnkr.co/edit/GgZwzN3319U2QM9q8FvC?p=preview",
				"https://codepen.io/garevna/pen/XewZZz",
				"https://plnkr.co/edit/c5pN5tiIEU75ZbnDMxdW?p=preview",
				"https://plnkr.co/edit/brgMsFIcY71mTr8Yf44m?p=preview",
				"https://codepen.io/garevna/pen/yzWrdN",
				"https://codepen.io/garevna/pen/mBYNEM"
			],
			"samples":[
				"https://plnkr.co/edit/GgZwzN3319U2QM9q8FvC?p=preview",
				"https://codepen.io/garevna/pen/XewZZz",
				"https://plnkr.co/edit/c5pN5tiIEU75ZbnDMxdW?p=preview",
				"https://plnkr.co/edit/brgMsFIcY71mTr8Yf44m?p=preview",
				"https://codepen.io/garevna/pen/yzWrdN",
				"https://codepen.io/garevna/pen/mBYNEM"
			],
			"usefull":[
				"https://alligator.io/vuejs/understanding-transitions/",
				"https://x-team.com/blog/vue-animation-data-visualization/?utm_content=buffer0798c&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer"
			]
		}
	],
	"Router":[
		{
			"head":"vue-router",
			"picture":false,
			"code":[
				"// создаем массив маршрутов",
				"const routes = [",
				"  {",
				"    path: '/Библиотека',",
				"    component: Library",
				"  },",
				"  {",
				"    path: '/Кафе',",
				"    component: Cafe",
				"  }",
				"]",
				"// создаем роутер и ",
				"// передаем ему маршруты",
				"const router = new VueRouter ( {",
				"   routes: routes",
				"})",
				"// создаем экземпляр Vue",
				"// и привязываем к нему роутер",
				"const app = new Vue ({",
				"  el: '#app',",
				"  router",
				"})",
				"// Теперь в приложении можно",
				"// вставлять ссылки на маршруты:",
				"<router-link to='/Библиотека'>",
				"     Библиотека",
				"</router-link>",
				"// и не забыть плейсхолдер для ",
				"// компонента:",
				"<router-view></router-view>"
			],
			"readme":"https://garevna.github.io/vue.github.io/data/router/01.html",
			"text":"Роутеру нужно указать массив путей (routes).<br/>Каждый путь должен указывать на компонент.<br/>Для вставки ссылок на маршруты в html-код служит компонент router-link с атрибутом 'to', значение которого является машрутом<br/><code>&lt;router-link to='/Библиотека'>&lt;/router-link></code><br/>Содержимое компонента (после рендеринга) будет помощено в контейнер &lt;router-view>&lt;/router-view>.",
			"textURL":"",
			"ref":[ "https://plnkr.co/edit/fqer871u9AOOORbbVu5E?p=preview" ],
			"samples":[
				"https://plnkr.co/edit/fqer871u9AOOORbbVu5E?p=preview"
			],
			"usefull":[
				"https://medium.com/js-dojo/build-a-lazy-load-router-with-vue-js-and-the-latest-browser-features-a1b52fe52dda"
			]
		},
		{
			"head":"$route",
			"picture":false,
			"code":[
				"const router = new VueRouter({",
				"    routes: [",
				"       {",
				"         path: '/user',",
				"         component: User,",
				"         children: [",
				"           {",
				"             path: 'profile',",
				"             component: Profile",
				"           }",
				"         ]",
				"       }",
				"     ]",
				"})"
			],
			"readme":"https://garevna.github.io/vue.github.io/data/router/02.html",
			"text":"Свойства объекта Route.<br/>Дочерние маршруты (children)<br/>Навигация по вложенным маршрутам с помощью именованных путей (пример).<br/>Именованные маршуты также удобно использовать при императивном задании пути<br/><p class='code-snippet'>this.$router.push( { name: val } )</p><br/>",
			"textURL":"",
			"ref":[
				"https://codepen.io/garevna/pen/YEwxOj",
				"https://plnkr.co/edit/M2DdjqrXnIbOqQIbWGEh?p=preview"
			],
			"samples":[
				"https://codepen.io/garevna/pen/YEwxOj",
				"https://plnkr.co/edit/M2DdjqrXnIbOqQIbWGEh?p=preview"
			],
			"usefull":[]
		},
		{
			"head":"router-link",
			"picture":false,
			"code":[
				"watch: {",
				"  '$route': function () {",
				"      this.sendUserEvent ( this.$route.name )",
				"      this.profile = this.$route.name === 'profile'",
				"      this.posts = this.$route.name === 'posts'",
				"   }",
				"}"
			],
			"readme":"https://garevna.github.io/vue.github.io/data/router/03.html",
			"text":"Часто удобно отслеживать изменение маршрута, устанавливая наблюдателя на свойство $route",
			"textURL":"",
			"ref":[ "https://plnkr.co/edit/9tX5uw1cEMTHEaSODs3Z?p=preview" ],
			"samples":[
				"https://plnkr.co/edit/9tX5uw1cEMTHEaSODs3Z?p=preview"
			],
			"usefull":[]
		},
		{
			"head":"params",
			"picture":false,
			"code":false,
			"readme":false,
			"text":"Передача параметров маршрута компоненту",
			"ref":[
				"https://plnkr.co/edit/MEtMANbrgVXuoR8A8esb?p=preview",
				"https://plnkr.co/edit/tukVkzYCXr2FqII2FtQA?p=preview"
			],
			"samples":[
				"https://plnkr.co/edit/MEtMANbrgVXuoR8A8esb?p=preview",
				"https://plnkr.co/edit/tukVkzYCXr2FqII2FtQA?p=preview"
			],
			"usefull":[]
		}
	],
	"AJAX": [
		{
			"head":"promise",
			"picture":false,
			"code":false,
			"text":"",
			"textURL":"",
			"readme":"https://garevna.github.io/vue.github.io/data/vue/promise.html",
			"ref":[ "https://repl.it/@garevna/Vueandpromise" ],
			"samples":[ "https://repl.it/@garevna/Vueandpromise" ],
			"usefull": [
				"https://scotch.io/tutorials/javascript-promises-for-dummies",
				"https://habrahabr.ru/company/zerotech/blog/317256/",
				"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"
			]
		},
		{
			"head":"vue-resource",
			"picture":false,
			"code":[
				"var sourceUrl = 'https://garevna.github.io/vue.github.io/data/posts.json'",
				"var promise = this.$http.get( sourceUrl )",
				"promise.then ( successCallback, failureCallback )",
				"// или еще проще:",
				"this.$http.get( sourceUrl ).then(",
				"      successCallback, failureCallback)",
				"// функции-обработчики:",
				"// successCallback -  успешного завершения операции",
				"// failureCallback -  завершения операции с ошибкой"
			],
			"readme":"https://garevna.github.io/vue.github.io/data/AJAX/vue-resource.html",
			"text":"Ссылка на библиотеку: https://cdn.jsdelivr.net/npm/vue-resource@1.3.4",
			"textURL":"",
			"ref":[ "https://plnkr.co/edit/lZLVjgPDmkpgmIwzebMd?p=preview" ],
			"samples": [ "https://plnkr.co/edit/lZLVjgPDmkpgmIwzebMd?p=preview" ],
			"usefull": [
				"https://github.com/pagekit/vue-resource"
			]
		},
		{
			"head":"Axios",
			"picture":false,
			"code":[],
			"readme":"https://garevna.github.io/vue.github.io/data/AJAX/axios.html",
			"text":"",
			"textURL":"",
			"ref":[ "https://plnkr.co/edit/lZLVjgPDmkpgmIwzebMd?p=preview" ],
			"samples": [ "https://plnkr.co/edit/lZLVjgPDmkpgmIwzebMd?p=preview" ],
			"usefull": [
				"https://serversideup.net/uploading-files-vuejs-axios/?utm_campaign=Revue%20newsletter&utm_medium=Newsletter&utm_source=Vue.js%20Developers"
			]
		}
	],
	"Vuex":[
		{
			"head":"Vuex.Store",
			"picture":false,
			"code":[
				"const store = new Vuex.Store ({",
				"    state: {",
				"       ...",
				"    },",
				"    mutations:  {",
				"       ...",
				"    }",
				"})"
			],
			"readme":"https://garevna.github.io/vue.github.io/data/vuex/start.html",
			"text":"Vuex.Store имеет состояние state<br/>По сути, это объект с реактивными данными всего приложения<br/>Эти данные подвергаются изменениям с помощью методов, описанных в объекте 'mutations'<br/>",
			"textURL":"",
			"ref":[ "https://plnkr.co/edit/aqZ1cfiHEc1jJYovg0VE?p=preview" ],
			"samples": [ "https://plnkr.co/edit/aqZ1cfiHEc1jJYovg0VE?p=preview" ],
			"usefull": [
			]
		},
		{
			"head":"using v-model",
			"picture":false,
			"code":false,
			"readme":"https://garevna.github.io/vue.github.io/data/vuex/01.html",
			"text":"Мутация состояний Vuex-store<br/>Двустороннаяя привязка к элементам форм<br/>Вычисляемые свойства экземпляра, привязка к состоянию хранилища с помощью геттеров и сеттеров<br/>Глубокая привязка объекта",
			"textURL":"",
			"ref":[
				"https://plnkr.co/edit/a5xPAy7ifDkVuN7FoDHz?p=preview",
				"https://plnkr.co/edit/W3wajZV3dLCaX48EtqmH?p=preview",
				"https://plnkr.co/edit/YZqbMDYh4vuv80WbjqOc?p=preview"
			],
			"samples": [
				"https://plnkr.co/edit/a5xPAy7ifDkVuN7FoDHz?p=preview",
				"https://plnkr.co/edit/W3wajZV3dLCaX48EtqmH?p=preview",
				"https://plnkr.co/edit/YZqbMDYh4vuv80WbjqOc?p=preview"
			],
			"usefull": [
			]
		},
		{
			"head":"without v-model",
			"picture":false,
			"code":false,
			"readme":"https://garevna.github.io/vue.github.io/data/vuex/01-1.html",
			"text":"Мутация состояний Vuex-store<br/>Привязка к элементам форм<br/>Объекты с глубокой структурой<br/>Работа с массивами<br/>Использование компонентов",
			"textURL":"",
			"ref":[
				"https://plnkr.co/edit/qfxaRe4NRGHy8MrSgP1b?p=preview",
				"https://plnkr.co/edit/q5zdUERK2biVxfeTvUbe?p=preview"
			],
			"samples": [
				"https://plnkr.co/edit/qfxaRe4NRGHy8MrSgP1b?p=preview",
				"https://plnkr.co/edit/q5zdUERK2biVxfeTvUbe?p=preview"
			],
			"usefull": [
			]
		},
		{
			"head":"getters & actions",
			"picture":false,
			"code":false,
			"readme":"https://garevna.github.io/vue.github.io/data/vuex/02.html",
			"text":"Объект getters содержит вычисляемые свойства объекта store<br/>Для асинхронных операций предусмотрены actions<br/>",
			"textURL":"",
			"ref":[
				"https://plnkr.co/edit/LHXDJv8S0ECIDHLkm3M0?p=preview"
			],
			"samples": [
				"https://plnkr.co/edit/LHXDJv8S0ECIDHLkm3M0?p=preview"
			],
			"usefull": [
			]
		}
	]
}
